{"ast":null,"code":"/**\n * @license\n * Video.js 7.7.5 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.7.5\";\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val) {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\n\n\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n/**\n * @file fn.js\n * @module fn\n */\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\n\n\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    var SetSham;\n\n    if (!window$1.Set) {\n      SetSham = /*#__PURE__*/function () {\n        function SetSham() {\n          this.set_ = {};\n        }\n\n        var _proto2 = SetSham.prototype;\n\n        _proto2.has = function has(key) {\n          return key in this.set_;\n        };\n\n        _proto2[\"delete\"] = function _delete(key) {\n          var has = this.has(key);\n          delete this.set_[key];\n          return has;\n        };\n\n        _proto2.add = function add(key) {\n          this.set_[key] = 1;\n          return this;\n        };\n\n        _proto2.forEach = function forEach(callback, thisArg) {\n          for (var key in this.set_) {\n            callback.call(thisArg, key, key, this);\n          }\n        };\n\n        return SetSham;\n      }();\n    }\n\n    this.setTimeoutIds_ = window$1.Set ? new Set() : new SetSham();\n    this.setIntervalIds_ = window$1.Set ? new Set() : new SetSham();\n    this.rafIds_ = window$1.Set ? new Set() : new SetSham();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1] && this.children_[index + 1].el_) {\n        refNode = this.children_[index + 1].el_;\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this; // Fall back to using a timer.\n\n\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this4 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        _this4[idName].forEach(_this4[cancelName], _this4);\n      });\n      _this4.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], _this.updateContent);\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestAnimationFrame(function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\n\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this; // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n\n\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestAnimationFrame(function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestAnimationFrame(function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestAnimationFrame(function () {\n      var currentTime = _this2.player_.ended() ? _this2.player_.duration() : _this2.getCurrentTime_();\n      var liveTracker = _this2.player_.liveTracker;\n\n      var duration = _this2.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this2.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this2.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this2.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this2.percent_ = percent;\n      }\n\n      if (_this2.currentTime_ !== currentTime || _this2.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this2.el_.setAttribute('aria-valuetext', _this2.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this2.currentTime_ = currentTime;\n        _this2.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this2.bar) {\n        _this2.bar.update(getBoundingClientRect(_this2.el()), _this2.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = getBoundingClientRect(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(0, 1, seekBarPoint);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n\n\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\n\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n/**\n * Computes the median of an array.\n *\n * @param {number[]} arr\n *        Input array of numbers.\n *\n * @return {number}\n *        Median value.\n */\n\nvar median = function median(arr) {\n  var mid = Math.floor(arr.length / 2);\n  var sortedList = [].concat(arr).sort(function (a, b) {\n    return a - b;\n  });\n  return arr.length % 2 !== 0 ? sortedList[mid] : (sortedList[mid - 1] + sortedList[mid]) / 2;\n};\n/* track when we are at the live edge, and other helpers for live playback */\n\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = this.seekableIncrement_ * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        // we try to get the best fit value for the seeking increment\n        // variable from the last 12 values.\n        this.seekableIncrementList_ = this.seekableIncrementList_.slice(-11);\n        this.seekableIncrementList_.push(Math.abs(newSeekEnd - this.lastSeekEnd_));\n\n        if (this.seekableIncrementList_.length > 3) {\n          this.seekableIncrement_ = median(this.seekableIncrementList_);\n        }\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    } // we should reset pastSeekEnd when the value\n    // is much higher than seeking increment.\n\n\n    if (this.pastSeekEnd() > this.seekableIncrement_ * 1.5) {\n      this.pastSeekEnd_ = 0;\n    } else {\n      this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n    }\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.seekableIncrementList_ = [];\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\n\n\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5); // on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // default isFullscreen_ to false\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var _this10 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this10.isFullscreen(true);\n        }, function () {\n          return _this10.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var _this11 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        promise.then(function () {\n          return _this11.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this12 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this12.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this13 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this13.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this13.cache_.sources = sources;\n\n      _this13.updateSourceCaches_(middlewareSource);\n\n      var err = _this13.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this13.src(sources.slice(1));\n        }\n\n        _this13.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this13.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this13.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this13.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this14 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this14.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this15 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this15.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this16 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this16.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this17 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this17.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\nvideojs$1.defineLazyProperty = defineLazyProperty;\n/**\n * @videojs/http-streaming\n * @version 1.11.2\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].dts,\n            end: frames[0].dts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].dts,\n          end: gops[gops.length - 1].dts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().uri);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 segment to determine the start of the segment\n     * in it's internal \"composition time\", which is equal to the base\n     * media decode time plus the composition time offset value\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"composition time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment; // get timescales from init segment\n\n      var timescales = mp4probe.timescale(segment.map.bytes); // calculate composition start time using the timescales and information\n      // contained within the media segment\n\n      var compositionStartTime = mp4probe.compositionStartTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= compositionStartTime;\n      }\n\n      return {\n        start: compositionStartTime,\n        end: compositionStartTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.11.2\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainSegmentLoader, audioSegmentLoader) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var videoMimeType = void 0;\n  var audioMimeType = void 0; // if there is a mimeType associated with the audioSegmentLoader, then the audio\n  // and video mimeType and codec strings are already in the format we need to\n  // pass with the other key systems\n\n  if (audioSegmentLoader.mimeType_) {\n    videoMimeType = mainSegmentLoader.mimeType_;\n    audioMimeType = audioSegmentLoader.mimeType_; // if there is no audioSegmentLoader mimeType, then we have to create the\n    // the audio and video mimeType/codec strings from information extrapolated\n    // from the mainSegmentLoader mimeType (ex. 'video/mp4; codecs=\"mp4, avc1\"' -->\n    // 'video/mp4; codecs=\"avc1\"' and 'audio/mp4; codecs=\"mp4\"')\n  } else {\n    var parsedMimeType = parseContentType(mainSegmentLoader.mimeType_);\n    var codecs = parsedMimeType.parameters.codecs.split(',');\n    var audioCodec = void 0;\n    var videoCodec = void 0;\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n\n      if (isAudioCodec(codec)) {\n        audioCodec = codec;\n      } else if (isVideoCodec(codec)) {\n        videoCodec = codec;\n      }\n    });\n    videoMimeType = parsedMimeType.type + '; codecs=\"' + videoCodec + '\"';\n    audioMimeType = parsedMimeType.type.replace('video', 'audio') + '; codecs=\"' + audioCodec + '\"';\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n  var videoPlaylist = mainSegmentLoader.playlist_;\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: audioMimeType,\n      videoContentType: videoMimeType\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  var mainSegmentLoader = hlsHandler.masterPlaylistController_.mainSegmentLoader_;\n  var audioSegmentLoader = hlsHandler.masterPlaylistController_.audioSegmentLoader_;\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, mainSegmentLoader, audioSegmentLoader);\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n      // in non-IE11 browsers. In IE11 this is too early to initialize media keys\n\n      if (!(videojs$1.browser.IE_VERSION === 11) && player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;","map":{"version":3,"sources":["D:/DATN/movie-app-master/client/node_modules/video.js/dist/video.es.js"],"names":["window$1","document","_extends","_assertThisInitialized","_inheritsLoose","safeParseTuple","keycode","XHR","vtt","_construct","_inherits","URLToolkit","Parser","parse","parseUTCTiming","mp4Inspector","mp4probe","CaptionParser","tsInspector","Decrypter","AsyncStream","decrypt","version","history","LogByTypeFactory","name","log","type","level","args","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","concat","splice","length","console","fn","info","test","Array","isArray","createLogger","logByType","_len","arguments","_key","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","toString","Object","prototype","keys","object","isObject","each","forEach","key","reduce","initial","accum","assign","target","sources","apply","source","value","isPlain","call","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","getPropertyValue","isNonBlankString","str","Boolean","trim","throwIfWhitespace","indexOf","classRegExp","className","isReal","isEl","nodeType","isInFrame","parent","self","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","i","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","result","k","undefined","height","parseFloat","width","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","isTextNode","emptyEl","removeChild","normalizeContent","map","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_windowLoaded","videojs","autoSetup","options","vids","slice","getElementsByTagName","audios","divs","mediaEls","e","mediaEl","player","autoSetupTimeout","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","createStyleElement","style","setTextContent","styleSheet","cssText","_initialGuid","_guid","newGUID","FakeWeakMap","WeakMap","vdata","floor","performance","now","Date","data","_proto","set","access","get","_delete","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","supportsPassive","opts","defineProperty","passiveEvents","on","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","throttled","debounce","immediate","timeout","cancel","clearTimeout","debounced","_later","later","EventTarget","allowedEvents_","ael","dispatchEvent","EVENT_MAP","queueTrigger","_this","Map","oldTimeout","size","isEvented","eventBusEl_","every","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","off$1","targetOrType","typeOrListener","trigger$1","evented","_options","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toLowerCase","string","replace","w","toTitleCase","titleCaseEquals","str1","str2","mergeOptions","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","name_","el_","children_","childIndex_","childNameIndex_","SetSham","Set","set_","_proto2","thisArg","setTimeoutIds_","setIntervalIds_","rafIds_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","isDisposed","createEl$1","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","match","index","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","$$1","$$$1","hasClass$1","addClass$1","removeClass$1","toggleClass$1","show","hide","lockShowing","unlockShowing","getAttribute$1","setAttribute$1","removeAttribute$1","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","cancelAnimationFrame","_this4","_ref","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","prefixed","apiMap","specApi","browserApi","_i","MediaError","message","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","acc","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","json","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","close","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","isEventKey","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","url","props","a","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","uri","cors","err","response","responseBody","loaded_","tech_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","createTrackHelper","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","bufferedPercent$1","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","_middleware","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","s","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","clickHandler","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","sourceIsEncrypted","usingPlugin","eme","sessions","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","Infinity","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","oldNode","replaceChild","CurrentTimeDisplay","_TimeDisplay","ended","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Number","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","_Slider","setEventHandlers_","update_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","requestFullscreen","exitFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","haveTitle","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","values","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","median","arr","mid","sortedList","sort","b","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","liveEdgeWindow","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","seekableIncrementList_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","mpegurlRE","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","_width","width_","_height","height_","techEl","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","inAllowedEls","userActions","doubleClick","userWasActive","toggleFullscreenClass_","targetPlayer","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","media","_this8","resolve","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","_this10","fsOptions","enterFullWindow","_this11","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","excludeElement","isContentEditable","allowedInputTypes","excludedTags","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this12","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","_ref2","sourceOrder","_this13","notSupportedMessage","middlewareSource","src_","_this14","sourceTech","_this15","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","isAudio_","_obj","String","toJSON","createModal","_this16","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","current","loadMedia","_this17","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","hasPlugin","extend","superClass","subClassMethods","subClass","methods","super_","normalizeId","videojs$1","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","addLanguage","_mergeOptions","createTimeRange","xhr","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","classCallCheck","Constructor","createClass","protoProps","staticProps","get$1","property","receiver","Function","getPrototypeOf","getter","inherits","create","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","slicedToArray","sliceIterator","_arr","_n","_d","_e","Symbol","iterator","_s","done","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateSegments","offset","resolveSegmentUris","segment","baseUri","resolvedUri","updateMaster","playlist","playlists","segments","endList","mediaSequence","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","delay","targetDuration","PlaylistLoader","srcUrl","hls","_options$withCredenti","withCredentials","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","responseText","customParser","addParser","mapper","addTagMapper","manifest","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","onreadystatechange","abort","isFinalRendition","mediaChange","started","backwardDuration","endSequence","precise","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","pow","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","BANDWIDTH","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","byterangeStr","byterange","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","textRange","range","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","ArrayBuffer","isView","bytes","buffer","byteOffset","initSegmentId","initSegment","segmentKeyId","hexDump","step","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","_ref$time","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","inbandTextTracks_","trackId","captionStreams","metadataTrack_","inBandMetadataTrackDispatchType","dispatchType","removeCuesFromTrack","deprecateOldCue","frame","privateData","durationOfVideo","dur","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","timestampOffset","videoDuration","mediaSource_","cueTime","frames","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","window","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","ShimWorker","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Uint8Array","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","transmuxerWorker","Stream","init","pipe","destination","flushSource","partialFlush","endTimeline","UINT32_MAX","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","charCodeAt","payload","view","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","flags","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","avc1Box","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","dts","pts","keyFrame","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils","highPrefix","lowPrefix","zeroFill","count","makeTable","metaTable","coneOfSilence","silence","ONE_SECOND_IN_TS","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","clock","sumFrameByteLengths","array","currentObj","sum","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","silentFrame","firstFrame","ceil","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","generateSampleTable$1","concatenateFrameData","audioFrameUtils","ONE_SECOND_IN_TS$1","collectDtsInfo","timelineStartInfo","maxSegmentPts","maxSegmentDts","clearDtsInfo","calculateTrackBaseMediaDecodeTime","trackDecodeInfo","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","subarray","parseUserData","sei","parseCaptionPackets","userData","ccData","discardEmulationPreventionBytes","emulationPreventionBytesPositions","newLength","newData","sourceIndex","captionPacketParser","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseIso88591","unescape","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","_MetadataStream","MetadataStream","tagSize","bufferSize","chunk","frameStart","frameSize","frameHeader","dataAlignmentIndicator","d","timeStamp","metadataStream","TimestampRolloverStream$1","_TransportPacketStream","_TransportParseStream","_ElementaryStream","MP2T_PACKET_LENGTH","SYNC_BYTE","TransportPacketStream","bytesInBuffer","everything","TransportParseStream","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","streamType","pid","processPes_","STREAM_TYPES","h264","adts","ElementaryStream","timedMetadata","parsePes","pes","ptsDtsFlags","packetLength","stream$$1","forceFlush","packetData","packetFlushable","fragment","codec","flushStreams_","m2ts","PAT_PID","m2ts_1","ONE_SECOND_IN_TS$2","_AdtsStream","ADTS_SAMPLING_FREQUENCIES","AdtsStream","handlePartialSegments","frameNum","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","expGolomb","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","NalByteStream","syncPoint","swapBuffer","len","H264Stream","nalByteStream","currentPts","currentDts","readSequenceParameterSet","skipScalingList","expGolombDecoder","lastScale","nextScale","deltaScale","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","aspectRatioIdc","ADTS_SAMPLING_FREQUENCIES$1","isLikelyAacData","parseSyncSafeInteger$1","percentEncode$1","parseIso88591$1","parseId3TagSize","header","byteIndex","returnSize","footerPresent","parseAdtsSize","lowThree","middle","highTwo","parseType","parseSampleRate","parseAacTimestamp","_AacStream","AacStream","setTimestamp","bytesLeft","tempLength","isLikelyAacData$1","ONE_SECOND_IN_TS$3","AUDIO_PROPERTIES","VIDEO_PROPERTIES","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","AudioSegmentStream","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","VideoSegmentStream","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","halfSecond","allowableOverlap","nearestDistance","dtsDistance","nearestGopObj","currentGopObj","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","CoalesceStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","setRemux","Transmuxer","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","wireTransmuxerEvents","transmuxer$$1","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","MessageHandlers","setTimestampOffset","appendStart","TransmuxerWorker","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecCount","parsed","mapLegacyAvcCodecs","codecString","makeMimeTypeString","container","getContainerType","getCodecs","mediaAttributes","CODECS","audioProfileFromDefault","audioGroupId","AUDIO","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","parseContentType","parameters","parameter","pair","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","makeWrappedSourceBuffer","mimeType","addSourceBuffer","updating","realBuffer_","get$$1","set$$1","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","createRealSourceBuffers_","codecProperty","nativeMediaSource_","shouldTrigger","appendBuffer","sortedSegments","segmentObj","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","addSeekableRange_","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","updateMaster$$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","sidx","savedSidxInfo","filterChangedSidxMappings","masterXml","clientOffset","manifestUri","videoSidx","mediaGroupSidx","requestSidx_","sidxRange","finishProcessingFn","sidxRequestOptions","responseType","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","hasPendingRequest","sidxRequestFinished_","doneFn","parseSidx","sidxMapping","sidxKey","parseMasterXml","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","updatedMaster","mediaUri","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","disposeFn","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","errorObj","Uint32Array","handleInitSegmentResponse","captionParser","isInitialized","timescales","timescale","videoTrackIds","handleSegmentResponse","encryptedBytes","fmp4Captions","decryptSegment","decrypter","decryptionHandler","requestId","decrypted","keyBytes","encrypted","iv","waitForCompletion","didError","endOfAllRequests","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","RESOLUTION","simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","currentTimeline","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","createCaptionsTrackIfNotExists","inbandTextTracks","addCaptionData","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","isFinite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","segmentInfo","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","timeline","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","endOfStream","buffered_","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","setDateTimeMapping","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","_mimeType","resetLoader","clearAllCaptions","monitorBufferTick_","fillBuffer_","checkBuffer_","isEndOfStream_","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","abortRequestEarly_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleProgress_","simpleSegment","trimBackBuffer_","createSimplifiedSegmentObj_","segmentRequestFinished_","processSegmentResponse_","clearParsedCaptions","handleSegment_","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","segmentTimestampInfo","ptsStartTime","ptsTime","dtsStartTime","dtsTime","timelineMapping","mappingForTimeline","initId","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","_char2","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","loadHandler","errorHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","tsprobe","inspect","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentTime","segmentStart","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","compositionStartTime","timeInfo","segmentStartTime","segmentEndTime","probedInfo","accuracy","mediaIndexDiff","Decrypter$1","decrypterWorker","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt$$1","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter$$1","STEP","asyncStream_","decryptChunk_","DecrypterWorker","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","onError","blacklistCurrentPlaylist","defaultTrack","SUBTITLES","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","_settings$mediaTypes$2","forced","autoselect","CLOSEDCAPTIONS","_settings$mediaTypes$3","instreamId","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","mediaSecondsLoaded_","smoothQualityChange_","fastQualityChange_","isEndOfStream","absolutePlaylistEnd","pauseLoading","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","mpc","masterPlaylistController_","smoothQualityChange","changeType","qualityChangeFunction","renditionSelectionMixin","representations","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY$1","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","audioSegmentLoader","videoMimeType","audioMimeType","parsedMimeType","audioCodec","keySystemContentTypes","videoPlaylist","keySystem","audioContentType","videoContentType","contentProtection","pssh","setupEmeOptions","sourceOptions","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","convertToProgramTime","seekToProgramTime$$1","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback"],"mappings":"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","sourcesContent":["/**\n * @license\n * Video.js 7.7.5 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.7.5\";\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue = window$1.getComputedStyle(el);\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val) {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap =\n  /*#__PURE__*/\n  function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    var SetSham;\n\n    if (!window$1.Set) {\n      SetSham =\n      /*#__PURE__*/\n      function () {\n        function SetSham() {\n          this.set_ = {};\n        }\n\n        var _proto2 = SetSham.prototype;\n\n        _proto2.has = function has(key) {\n          return key in this.set_;\n        };\n\n        _proto2[\"delete\"] = function _delete(key) {\n          var has = this.has(key);\n          delete this.set_[key];\n          return has;\n        };\n\n        _proto2.add = function add(key) {\n          this.set_[key] = 1;\n          return this;\n        };\n\n        _proto2.forEach = function forEach(callback, thisArg) {\n          for (var key in this.set_) {\n            callback.call(thisArg, key, key, this);\n          }\n        };\n\n        return SetSham;\n      }();\n    }\n\n    this.setTimeoutIds_ = window$1.Set ? new Set() : new SetSham();\n    this.setIntervalIds_ = window$1.Set ? new Set() : new SetSham();\n    this.rafIds_ = window$1.Set ? new Set() : new SetSham();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      if (DomData.has(this.el_)) {\n        DomData[\"delete\"](this.el_);\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1] && this.children_[index + 1].el_) {\n        refNode = this.children_[index + 1].el_;\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this2.setTimeoutIds_.has(timeoutId)) {\n        _this2.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this3 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this3.rafIds_.has(id)) {\n        _this3.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this4 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        _this4[idName].forEach(_this4[cancelName], _this4);\n      });\n      _this4.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver);\n    this.off('mouseout', this.handleMouseOut);\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], _this.updateContent);\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestAnimationFrame(function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this;\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestAnimationFrame(function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestAnimationFrame(function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestAnimationFrame(function () {\n      var currentTime = _this2.player_.ended() ? _this2.player_.duration() : _this2.getCurrentTime_();\n      var liveTracker = _this2.player_.liveTracker;\n\n      var duration = _this2.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this2.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this2.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this2.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this2.percent_ = percent;\n      }\n\n      if (_this2.currentTime_ !== currentTime || _this2.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this2.el_.setAttribute('aria-valuetext', _this2.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this2.currentTime_ = currentTime;\n        _this2.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this2.bar) {\n        _this2.bar.update(getBoundingClientRect(_this2.el()), _this2.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = getBoundingClientRect(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(0, 1, seekBarPoint);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    _this.on(_this.muteToggle, 'keyup', _this.handleKeyPress);\n\n    _this.on(_this.volumeControl, 'keyup', _this.handleVolumeControlKeyUp);\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    _this.on('mouseover', _this.handleMouseOver);\n\n    _this.on('mouseout', _this.handleMouseOut); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', bind(_assertThisInitialized(_this), _this.handleMenuKeyUp));\n    });\n\n    _this.on('mouseleave', _this.handleMouseLeave);\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', bind(this, this.handleMenuKeyUp));\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * Computes the median of an array.\n *\n * @param {number[]} arr\n *        Input array of numbers.\n *\n * @return {number}\n *        Median value.\n */\nvar median = function median(arr) {\n  var mid = Math.floor(arr.length / 2);\n  var sortedList = [].concat(arr).sort(function (a, b) {\n    return a - b;\n  });\n  return arr.length % 2 !== 0 ? sortedList[mid] : (sortedList[mid - 1] + sortedList[mid]) / 2;\n};\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = this.seekableIncrement_ * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        // we try to get the best fit value for the seeking increment\n        // variable from the last 12 values.\n        this.seekableIncrementList_ = this.seekableIncrementList_.slice(-11);\n        this.seekableIncrementList_.push(Math.abs(newSeekEnd - this.lastSeekEnd_));\n\n        if (this.seekableIncrementList_.length > 3) {\n          this.seekableIncrement_ = median(this.seekableIncrementList_);\n        }\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    } // we should reset pastSeekEnd when the value\n    // is much higher than seeking increment.\n\n\n    if (this.pastSeekEnd() > this.seekableIncrement_ * 1.5) {\n      this.pastSeekEnd_ = 0;\n    } else {\n      this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n    }\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.seekableIncrementList_ = [];\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // default isFullscreen_ to false\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this6.techGet('currentSrc');\n\n          _this6.lastSource_.tech = techSrc;\n\n          _this6.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var _this10 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this10.isFullscreen(true);\n        }, function () {\n          return _this10.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var _this11 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        promise.then(function () {\n          return _this11.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this12 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this12.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this13 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this13.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this13.cache_.sources = sources;\n\n      _this13.updateSourceCaches_(middlewareSource);\n\n      var err = _this13.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this13.src(sources.slice(1));\n        }\n\n        _this13.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this13.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this13.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this13.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this14 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this14.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this15 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this15.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this16 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this16.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this17 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this17.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\nvideojs$1.defineLazyProperty = defineLazyProperty;\n\n/**\n * @videojs/http-streaming\n * @version 1.11.2\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n          frameNum++; // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          } // Remove the finished frame from the buffer and start the process again\n\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$3 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          this.trigger('timingInfo', {\n            start: frames[0].dts,\n            end: frames[0].dts + frames.length * frameDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].dts,\n          end: gops[gops.length - 1].dts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer$$1) {\n      transmuxer$$1.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer$$1.captionStream) {\n        transmuxer$$1.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer$$1.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer$$1.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer$$1.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new transmuxer.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      if (!this.pendingBuffers_.length) {\n        // We are no longer in the internal \"updating\" state\n        this.trigger('updateend');\n        this.bufferUpdating_ = false;\n        return;\n      } // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        var currentSidxInfo = _this8.media().sidx;\n\n        if (updatedMaster) {\n          if (currentSidxInfo) {\n            var sidxKey = generateSidxKey(currentSidxInfo); // the sidx was updated, so the previous mapping was removed\n\n            if (!_this8.sidxMapping_[sidxKey]) {\n              var playlist = _this8.media();\n\n              _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n                handleManifestRedirects: _this8.handleManifestRedirects\n              }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n                if (!newMaster || !sidx) {\n                  throw new Error('failed to request sidx on minimumUpdatePeriod');\n                } // update loader's sidxMapping with parsed sidx box\n\n\n                _this8.sidxMapping_[sidxKey].sidx = sidx;\n                _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                  _this8.trigger('minimumUpdatePeriod');\n                }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n                _this8.refreshMedia_(_this8.media().uri);\n\n                return;\n              }));\n            }\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n        startOfSegment = lastBufferedEnd;\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        // Subtract any difference between the PTS and DTS times of the first frame\n        // from the timeStampOffset (which currently equals the buffered.end) to prevent\n        // creating any gaps in the buffer\n        if (timingInfo && timingInfo.segmentTimestampInfo) {\n          var ptsStartTime = timingInfo.segmentTimestampInfo[0].ptsTime;\n          var dtsStartTime = timingInfo.segmentTimestampInfo[0].dtsTime;\n          segmentInfo.timestampOffset -= ptsStartTime - dtsStartTime;\n        }\n\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 segment to determine the start of the segment\n     * in it's internal \"composition time\", which is equal to the base\n     * media decode time plus the composition time offset value\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"composition time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment; // get timescales from init segment\n\n      var timescales = mp4probe.timescale(segment.map.bytes); // calculate composition start time using the timescales and information\n      // contained within the media segment\n\n      var compositionStartTime = mp4probe.compositionStartTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= compositionStartTime;\n      }\n\n      return {\n        start: compositionStartTime,\n        end: compositionStartTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n      var segmentTimestampInfo = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n        segmentTimestampInfo = timeInfo.video;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n        segmentTimestampInfo = timeInfo.audio;\n      }\n\n      var probedInfo = {\n        segmentTimestampInfo: segmentTimestampInfo,\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.11.2\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainSegmentLoader, audioSegmentLoader) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var videoMimeType = void 0;\n  var audioMimeType = void 0; // if there is a mimeType associated with the audioSegmentLoader, then the audio\n  // and video mimeType and codec strings are already in the format we need to\n  // pass with the other key systems\n\n  if (audioSegmentLoader.mimeType_) {\n    videoMimeType = mainSegmentLoader.mimeType_;\n    audioMimeType = audioSegmentLoader.mimeType_; // if there is no audioSegmentLoader mimeType, then we have to create the\n    // the audio and video mimeType/codec strings from information extrapolated\n    // from the mainSegmentLoader mimeType (ex. 'video/mp4; codecs=\"mp4, avc1\"' -->\n    // 'video/mp4; codecs=\"avc1\"' and 'audio/mp4; codecs=\"mp4\"')\n  } else {\n    var parsedMimeType = parseContentType(mainSegmentLoader.mimeType_);\n    var codecs = parsedMimeType.parameters.codecs.split(',');\n    var audioCodec = void 0;\n    var videoCodec = void 0;\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n\n      if (isAudioCodec(codec)) {\n        audioCodec = codec;\n      } else if (isVideoCodec(codec)) {\n        videoCodec = codec;\n      }\n    });\n    videoMimeType = parsedMimeType.type + '; codecs=\"' + videoCodec + '\"';\n    audioMimeType = parsedMimeType.type.replace('video', 'audio') + '; codecs=\"' + audioCodec + '\"';\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n  var videoPlaylist = mainSegmentLoader.playlist_;\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: audioMimeType,\n      videoContentType: videoMimeType\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  var mainSegmentLoader = hlsHandler.masterPlaylistController_.mainSegmentLoader_;\n  var audioSegmentLoader = hlsHandler.masterPlaylistController_.audioSegmentLoader_;\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, mainSegmentLoader, audioSegmentLoader);\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n      // in non-IE11 browsers. In IE11 this is too early to initialize media keys\n\n      if (!(videojs$1.browser.IE_VERSION === 11) && player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n"]},"metadata":{},"sourceType":"module"}